DELETE FROM event_rewards;
DELETE FROM user_events;
DELETE FROM tools;
DELETE FROM toolboxes;
DELETE FROM placed_items;
DELETE FROM action_histories;
DELETE FROM item_histories;
DELETE FROM icons;
DELETE FROM inventory_items;
DELETE FROM store_items;
DELETE FROM inventories;
DELETE FROM stores;
DELETE FROM levels;
DELETE FROM plots;
DELETE FROM gardens;
DELETE FROM users;

DROP TABLE IF EXISTS event_rewards CASCADE;
DROP TABLE IF EXISTS user_events CASCADE;
DROP TABLE IF EXISTS tools CASCADE;
DROP TABLE IF EXISTS toolboxes CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS icons CASCADE;
DROP TABLE IF EXISTS inventories CASCADE;
DROP TABLE IF EXISTS inventory_items CASCADE;
DROP TABLE IF EXISTS stores CASCADE;
DROP TABLE IF EXISTS store_items CASCADE;
DROP TABLE IF EXISTS levels CASCADE;
DROP TABLE IF EXISTS gardens CASCADE;
DROP TABLE IF EXISTS plots CASCADE;
DROP TABLE IF EXISTS placed_items CASCADE;
DROP TABLE IF EXISTS action_histories CASCADE;
DROP TABLE IF EXISTS item_histories CASCADE;

--Find locked transactions
SELECT 
    pg_stat_activity.pid, 
    pg_stat_activity.query, 
    pg_stat_activity.state, 
    pg_locks.locktype, 
    pg_locks.mode, 
    pg_class.relname AS tablename
FROM 
    pg_stat_activity
JOIN 
    pg_locks ON pg_stat_activity.pid = pg_locks.pid
JOIN 
    pg_class ON pg_locks.relation = pg_class.oid
WHERE 
    pg_stat_activity.datname = 'virtual-garden-local';

SELECT pg_terminate_backend(pid); -- Replace `pid` with the actual process ID

SELECT pg_terminate_backend(pg_stat_activity.pid)
FROM pg_stat_activity
JOIN pg_locks ON pg_stat_activity.pid = pg_locks.pid
JOIN pg_class ON pg_locks.relation = pg_class.oid
WHERE pg_stat_activity.datname = 'virtual-garden-local'
AND pg_class.relname NOT LIKE 'pg_%';


--Check blocking transactions
SELECT 
    blocked_locks.pid AS blocked_pid,
    blocked_activity.query AS blocked_query,
    blocking_locks.pid AS blocking_pid,
    blocking_activity.query AS blocking_query
FROM 
    pg_catalog.pg_locks blocked_locks
    JOIN pg_catalog.pg_stat_activity blocked_activity ON blocked_activity.pid = blocked_locks.pid
    JOIN pg_catalog.pg_locks blocking_locks ON blocking_locks.locktype = blocked_locks.locktype
        AND blocking_locks.database IS NOT DISTINCT FROM blocked_locks.database
        AND blocking_locks.relation IS NOT DISTINCT FROM blocked_locks.relation
        AND blocking_locks.page IS NOT DISTINCT FROM blocked_locks.page
        AND blocking_locks.tuple IS NOT DISTINCT FROM blocked_locks.tuple
        AND blocking_locks.virtualxid IS NOT DISTINCT FROM blocked_locks.virtualxid
        AND blocking_locks.transactionid IS NOT DISTINCT FROM blocked_locks.transactionid
        AND blocking_locks.classid IS NOT DISTINCT FROM blocked_locks.classid
        AND blocking_locks.objid IS NOT DISTINCT FROM blocked_locks.objid
        AND blocking_locks.objsubid IS NOT DISTINCT FROM blocked_locks.objsubid
    JOIN pg_catalog.pg_stat_activity blocking_activity ON blocking_activity.pid = blocking_locks.pid
WHERE 
    NOT blocked_locks.GRANTED;